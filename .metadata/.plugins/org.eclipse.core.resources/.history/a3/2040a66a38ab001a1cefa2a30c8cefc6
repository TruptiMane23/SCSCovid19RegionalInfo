package com.example.scs.controller;

import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.example.scs.model.UserRegistration;
import com.example.scs.services.CovidDashboardService;
import com.example.scs.services.LoginService;
import com.example.scs.services.RegistrationService;
import com.example.scs.util.CovidSession;
import com.example.scs.vo.CovidDashboardVo;
import com.example.scs.vo.RegistrationVo;

import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class CovidController {

	private static final Logger logger = LoggerFactory.getLogger(CovidController.class);

	@Autowired
	LoginService loginService;

	@Autowired
	RegistrationService registrationService;

	@Autowired
	CovidDashboardService covidDashboardService;

	@Autowired
	CovidSession session;

	@GetMapping("/home")
	public String homePage(Model model, UserRegistration reg) {
		logger.info("------------------Inside homePage Controller------------------");

		Map<String, Integer> covidDetailsMap = covidDashboardService.getCovidDashboardDetails();

		model.addAttribute("TotalCases", covidDetailsMap.get("TotalCases"));
		model.addAttribute("ActiveCases", covidDetailsMap.get("ActiveCases"));
		model.addAttribute("Recovered", covidDetailsMap.get("Recovered"));
		model.addAttribute("Death", covidDetailsMap.get("Death"));

		logger.info("------------------Exit homePage Controller------------------");
		return "index";
	}

	@RequestMapping("/redirectToRegister")
	public String redirectToRegister() {
		logger.info("------------------Inside redirectToRegister------------------");

		System.out.println("Redirect To Register");

		logger.info("------------------Exit redirectToRegister------------------");
		return "registration";
	}

	@RequestMapping("/userRegistration")
	public String doUserRegistration(Model model, RegistrationVo vo) {
		logger.info("------------------Inside doUserRegistration------------------");

		System.out.println("reg.111111111111." + vo.getFirstName());

		UserRegistration user = registrationService.setUserRegistrationDetails(vo);
		model.addAttribute("FirstName", user.getFirstName());
		model.addAttribute("LastName", user.getLastName());
		model.addAttribute("EmailId", user.getEmailId());
		model.addAttribute("MobileNo", user.getMobileNo());
		model.addAttribute("Country", user.getCountry());
		model.addAttribute("State", user.getState());
		model.addAttribute("City", user.getCity());
		model.addAttribute("Area", user.getArea());
		model.addAttribute("Pincode", user.getPincode());
		model.addAttribute("Address", user.getAddress());

		model.addAttribute("successRegMsg", "You have been successfully registered!");

		logger.info("------------------Exit doUserRegistration------------------");
		return "index";
	}

	@PostMapping("/login")
	public String loginUser(Model model, RegistrationVo vo) {
		logger.info("------------------Inside loginUser------------------");

		System.out.println("User Name" + vo.getUsername());
		System.out.println("password" + vo.getPassword());

		UserRegistration user = registrationService.verifyUser(vo);
		if (user != null) {
			model.addAttribute("stateObject", session.getCovidCountryDropdown());
			model.addAttribute("firstName", user.getFirstName());

			Object[] allCovidDetails = covidDashboardService.getAll();
			model.addAttribute("allCountryDetails", allCovidDetails);

			logger.info("------------------Exit loginUser------------------");
			return "covid_details";
		} else {
			model.addAttribute("TotalCases", session.getTotalCases());
			model.addAttribute("ActiveCases", session.getActiveCases());
			model.addAttribute("Recovered", session.getRecovered());
			model.addAttribute("Death", session.getDeath());
			model.addAttribute("InvalidUser", "Invalid Username and Password!");
			
			logger.info("------------------Exit loginUser------------------");
			return "index";
		}
	}

	@RequestMapping("/getRegionalCovidDetails")
	public String getRegionalCovidDetails(Model model, CovidDashboardVo vo) {
		logger.info("------------------Inside getRegionalCovidDetails------------------");

		System.out.println("country name :" + vo.getCountryName());
		System.out.println("Satate name :" + vo.getStateName());
		System.out.println("city name :" + vo.getCityName());

		Map<String, Integer> covidDetailsMap = covidDashboardService.getRegionalCovidDetails(vo.getCountryName(), vo.getStateName(), vo.getCityName());

		model.addAttribute("TotalCases", covidDetailsMap.get("TotalCases"));
		model.addAttribute("ActiveCases", covidDetailsMap.get("ActiveCases"));
		model.addAttribute("Recovered", covidDetailsMap.get("Recovered"));
		model.addAttribute("Death", covidDetailsMap.get("Death"));

		System.out.println("country name :" + vo.getCountryName());
		System.out.println("Satate name :" + vo.getStateName());
		System.out.println("city name :" + vo.getCityName());

//		String json = "{\r\n" + 
//				"					\"India\" : {\r\n" + 
//				"				\"Maharashtra\" : [ \"Kalyan\", \"Dadar\" ],\r\n" + 
//				"				\"Gujrat\" : [ \"Ahmedabad\", \"Surat\" ],\r\n" + 
//				"			},\r\n" + 
//				"			\"Germany\" : {\r\n" + 
//				"				\"Bavaria\" : [ \"Munich\", \"Fussen\" ],\r\n" + 
//				"				\"Hessen\" : [ \"Frankfurt\", \"Kassel\" ]\r\n" + 
//				"			},\r\n" +
//				"		}";

		System.out.println("CovidDropdown11111..." + session.getCovidCountryDropdown());
		model.addAttribute("stateObject", session.getCovidCountryDropdown());

		logger.info("------------------Exit getRegionalCovidDetails------------------");
		return "covid_details";

	}

	@RequestMapping("/getAll")
	public String getAll() {
		logger.info("------------------Inside getAll------------------");

		Model model = null;

		Object[] covidDetailsMap = covidDashboardService.getAll();

		model.addAttribute("allCountryDetails", covidDetailsMap);

		logger.info("------------------Exit getAll------------------");
		return "covid_details";

	}

	@RequestMapping("/getCountryCovidDetails")
	public String getCountryCovidDetails(Model model, CovidDashboardVo vo) {
		logger.info("------------------Inside getCountryCovidDetails------------------");
//
//		String name = loginService.getName();
//		model.put("Message", name);

		Model mdoel;
		System.out.println("country name :" + vo.getCountryName() + "Country id " + vo.getCountryId());
		System.out.println("Satate name :" + vo.getStateName() + "state id " + vo.getStateId());
		System.out.println("city name :" + vo.getCityName() + "city id " + vo.getCityId());

		logger.info("------------------Exit getCountryCovidDetails------------------");
		return "index";

	}

	@RequestMapping("/getStateCovidDetails")
	public String getStateCovidDetails(Map<String, Object> model) {
		logger.info("------------------Inside getStateCovidDetails------------------");

		String name = loginService.getName();
		model.put("Message", name);

		logger.info("------------------Exit getStateCovidDetails------------------");
		return "index";

	}

	@RequestMapping("/getCityCovidDetails")
	public String getCityCovidDetails(Map<String, Object> model) {
		logger.info("------------------Inside getCityCovidDetails------------------");

		String name = loginService.getName();
		model.put("Message", name);

		logger.info("------------------Exit getCityCovidDetails------------------");
		return "index";

	}

	@RequestMapping("/getAreaCovidDetails")
	public String getAreaCovidDetails(Map<String, Object> model) {
		logger.info("------------------Inside getAreaCovidDetails------------------");
		String name = loginService.getName();
		model.put("Message", name);

		logger.info("------------------Exit getAreaCovidDetails------------------");
		return "index";

	}

	@RequestMapping("/getNearbyCovidDetails")
	public String getNearbyCovidDetails(Map<String, Object> model) {
		logger.info("------------------Inside getNearbyCovidDetails------------------");
		String name = loginService.getName();
		model.put("Message", name);

		logger.info("------------------Exit getNearbyCovidDetails------------------");
		return "index";

	}
}
